version: '3'

tasks:
  # Development commands
  dev:
    desc: Start both frontend and backend development servers
    deps: [frontend:dev, backend:dev]

  install:
    desc: Install all dependencies
    deps: [frontend:install, backend:setup]

  # Frontend tasks
  frontend:dev:
    desc: Start the frontend development server
    dir: frontend
    cmds:
      - pnpm run dev

  frontend:build:
    desc: Build the frontend for production
    dir: frontend
    cmds:
      - pnpm run build

  frontend:start:
    desc: Start the production frontend server
    dir: frontend
    cmds:
      - pnpm run start

  frontend:install:
    desc: Install frontend dependencies
    dir: frontend
    cmds:
      - pnpm install

  frontend:lint:
    desc: Run linting on frontend code
    dir: frontend
    cmds:
      - pnpm run lint

  frontend:lint-fix:
    desc: Fix linting issues in frontend code
    dir: frontend
    cmds:
      - pnpm run lint -- --fix

  # Backend tasks
  backend:setup:
    desc: Create virtual environment and install dependencies
    dir: backend
    cmds:
      - python3 -m venv venv
      - source venv/bin/activate && pip install -r requirements.txt

  backend:dev:
    desc: Start the backend development server
    dir: backend
    cmds:
      - source venv/bin/activate && python3 -m uvicorn main:app --reload --host 0.0.0.0 --port 8000

  backend:install:
    desc: Install backend dependencies (requires existing venv)
    dir: backend
    cmds:
      - source venv/bin/activate && pip install -r requirements.txt

  backend:test:
    desc: Run backend tests
    dir: backend
    cmds:
      - source venv/bin/activate && pytest

  backend:lint:
    desc: Run linting on backend code
    dir: backend
    cmds:
      - source venv/bin/activate && flake8 .
      - source venv/bin/activate && black --check .

  backend:lint-fix:
    desc: Fix linting issues in backend code
    dir: backend
    cmds:
      - source venv/bin/activate && black .
      - source venv/bin/activate && isort .

  # Production/deployment tasks
  build:
    desc: Build both frontend and backend for production
    deps: [frontend:build]

  # Utility tasks
  clean:
    desc: Clean all build artifacts and dependencies
    cmds:
      - rm -rf frontend/node_modules frontend/.next frontend/pnpm-lock.yaml
      - rm -rf backend/__pycache__ backend/*.pyc backend/.pytest_cache backend/venv

  setup:
    desc: Initial project setup
    cmds:
      - task install
      - echo "Setup complete! Run 'task dev' to start development servers"